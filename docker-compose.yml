version: "3.9"

services:
  db:
    build:
      dockerfile: Dockerfile.db
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test:
        - "CMD-SHELL"
        - "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - never

  db-prod:
    extends:
      service: db
    env_file: .db-prod.env
    networks:
      - backend-prod
    profiles:
      - prod

  db-dev:
    extends:
      service: db
    env_file: .db-dev.env
    networks:
      - backend-dev
    profiles:
      - dev

  db-test:
    extends:
      service: db
    env_file: .db-test.env
    networks:
      - backend-test
    profiles:
      - test

  migration:
    build:
      context: ./migrations
    working_dir: /usr/app
    entrypoint: ./migrate
    volumes:
      - ./migrations:/usr/app
    profiles:
      - never

  migration-prod:
    depends_on:
      db-prod:
        condition: service_healthy
    extends:
      service: migration
    env_file: .db-prod.env
    networks:
      - backend-prod
    profiles:
      - prod

  migration-dev:
    depends_on:
      db-dev:
        condition: service_healthy
    extends:
      service: migration
    env_file: .db-dev.env
    networks:
      - backend-dev
    profiles:
      - dev

  migration-test:
    depends_on:
      db-test:
        condition: service_healthy
    extends:
      service: migration
    env_file: .db-test.env
    networks:
      - backend-test
    profiles:
      - test

  mock-notifier:
    build:
      dockerfile: services/mock_notifier/Dockerfile
    environment:
      - PORT=3000
      - HOST=0.0.0.0
    ports:
      - 3000:3000
    profiles:
      - never

  mock-notifier-prod:
    extends:
      service: mock-notifier
    networks:
      - backend-prod
    profiles:
      - prod

  mock-notifier-dev:
    extends:
      service: mock-notifier
    networks:
      - backend-dev
    profiles:
      - dev

  mock-notifier-test:
    extends:
      service: mock-notifier
    networks:
      - backend-test
    profiles:
      - test

networks:
  backend-dev:
  backend-test:
  backend-prod:
