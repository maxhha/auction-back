// Powered by https://swimlanes.io
title: Регистрация пользователя

order: Manager, Client, Server

_: **1. Создание гостя**

Client -> Server: `register`

note:
**regitster** создает нового User в базе данных.
_Запись гостя удалится из бд через 4 часа, если он окончательно не зарегистрируется_

Client <- Server: JWT token

_: **2. Заполнение анкеты**

Client -> Server: `requestSetUserEmail`

Server --> Client: Send token to email

Client -> Server: `approveSetUserEmail(token)`

note:
Создает пустую анкету, если ее ранее не было и устанвливает в ней переданную почту.

Server -> Client: Updated UserForm

--: Аналогично для `requestSetUserPhone`

Client -> Server: `updateUserPassword`

note:
Установка начального пароля

Server -> Client: Updated UserForm

// TODO: add setUserName

_: **3. Модерация анкеты**

Client -> Server: `requestModerateUserForm`

Client <-- Server: Send token over email or phone
Client -> Server: `approveModerateUserForm(token)`
Client <- Server: Updated UserForm

...: Менеджер приступил к подтвержению анкет

Manager <- Server: userForms

if: Анкета заполнена правильно

Manager -> Server: `approveUserForm`
Server --> Client: Send email
Server --> Manager: Updated UserForm

else: В анкете существуют ошибки или неточности

Manager -> Server: `declineUserForm`
Server --> Client: Send email
Server --> Manager: Updated UserForm

...: Клиент должен изменить информацию в анкете и отправить ее на повторную модерацию

end