# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Balance {
  available: Float!
  blocked: Float!
}

type User {
  id: ID!
  balance: Balance!
  offers: [Offer!]!
  products: [Product!]!
}

type Product {
  id: ID!
  name: String!
  description: String
  owner: User!
  offers: [Offer!]!
}

type Offer {
  id: ID!
  consumer: User!
  product: Product!
}

type RegisterResult {
  token: String!
}

input IncreaseBalanceInput {
  userId: ID!
  amount: Float!
}

type IncreaseBalanceResult {
  user: User!
}

input CreateProductInput {
  name: String!
  description: String
}

type CreateProductResult {
  product: Product!
}

type OfferProductInput {
  productId: ID!
}

type OfferProductResult {
  product: Product!
}

type TakeOffProductInput {
  productId: ID!
}

type TakeOffProductResult {
  product: Product!
}

type SellProductInput {
  productId: ID!
}

type SellProductResult {
  product: Product!
}

type CreateOfferInput {
  productId: ID!
  amount: Float!
}

type CreateOfferResult {
  offer: Offer!
}

type RemoveOfferInput {
  offerId: ID!
}

type RemoveOfferResult {
  status: String!
}

type Query {
  viewer: User
}

type Mutation {
  register: RegisterResult!
  increaseBalance(input: IncreaseBalanceInput!): IncreaseBalanceResult!

  createProduct(input: CreateProductInput!): CreateProductResult!
  offerProduct(input: OfferProductInput!): OfferProductResult!
  takeOffProduct(input: TakeOffProductInput!): TakeOffProductResult!
  sellProduct(input: SellProductInput!): SellProductResult!

  createOffer(input: CreateOfferInput!): CreateOfferResult!
  removeOffer(input: RemoveOfferInput!): RemoveOfferResult!
}
