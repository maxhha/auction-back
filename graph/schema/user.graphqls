type Balance {
  available: Float!
  blocked: Float!
}

type User {
  id: ID!
  balance: Balance!
  offers: [Offer!]!
  products(first: Int, after: String): ProductConnection!
}

extend type Query {
  viewer: User
}

type RegisterResult {
  token: String!
}

input IncreaseBalanceInput {
  userId: ID!
  amount: Float!
}

type IncreaseBalanceResult {
  user: User!
}

extend type Mutation {
  register: RegisterResult!
  increaseBalance(input: IncreaseBalanceInput!): IncreaseBalanceResult!
}
