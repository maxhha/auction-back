type User {
  id: ID!
  email: String!
  phone: String!
  name: String!
  blockedUntil: DateTime
  isAdmin: Boolean!
  offers(first: Int, after: String): OffersConnection!
  products(first: Int, after: String): ProductsConnection!
}

extend type Query {
  viewer: User
}

type RegisterResult {
  token: String!
}

input IncreaseBalanceInput {
  userId: ID!
  amount: Float!
}

type IncreaseBalanceResult {
  user: User!
}

extend type Mutation {
  register: RegisterResult!
  increaseBalance(input: IncreaseBalanceInput!): IncreaseBalanceResult!
}
