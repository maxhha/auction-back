enum OfferStateEnum {
  CREATED,
  CANCELLED,
  TRANSFERRING_MONEY,
  TRANSFER_MONEY_FAILED,
  TRANSFERRING_PRODUCT,
  TRANSFER_PRODUCT_FAILED,
  SUCCEEDED,
  RETURNING_MONEY,
  RETURN_MONEY_FAILED,
  MONEY_RETURNED
}

type Offer {
  id: ID!
  # Current offer state
  state: OfferStateEnum!
  # Reason of fail for *_FAILED states 
  failReason: String
  # User created this offer 
  user: User!
  # Product for which this offer was created
  product: Product!
  # Total moneys offered
  moneys: [Money!]!
  # Offer creation time
  createdAt: DateTime!
  # If set to true, the offer will be removed after the product is sold
  deleteOnSell: Boolean!
  # Transactions of this offer
  transactions: [Transaction!]!
}

type OffersConnectionEdge {
  cursor: Cursor!
  node: Offer!
}

type OffersConnection {
  pageInfo: PageInfo!
  edges: [OffersConnectionEdge!]!
}

input CreateOfferInput {
  productId: ID!
  amount: Float!
}

type CreateOfferResult {
  offer: Offer!
}

input RemoveOfferInput {
  offerId: ID!
}

type RemoveOfferResult {
  status: String!
}

extend type Mutation {
  createOffer(input: CreateOfferInput!): CreateOfferResult!
  removeOffer(input: RemoveOfferInput!): RemoveOfferResult!
}
